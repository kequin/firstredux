{"ast":null,"code":"import getMathHandler from './assets/applyMath.js';\nconst defaultState = {\n  last: '',\n  now: '',\n  lastSymbol: true,\n  isWritten: false\n};\n\nconst reducer = (state = defaultState, action) => {\n  let newString = state.now;\n  let lastString = state.last;\n\n  switch (action.type) {\n    case 'NEW_ACTION':\n      if (newString.lenght === 0 || state.lastSymbol) {\n        newString = state.now;\n      } else {\n        newString = state.now + ' ' + action.payload + ' ';\n      }\n\n      return {\n        last: state.last,\n        now: newString,\n        lastSymbol: true,\n        isWritten: false\n      };\n\n    case 'NEW_NUMBER':\n      if (state.isWritten) {\n        newString = action.payload;\n      } else {\n        newString = state.now + action.payload;\n      }\n\n      return {\n        last: state.last,\n        now: newString,\n        lastSymbol: false,\n        isWritten: false\n      };\n\n    case 'DELETE_ONE':\n      newString = state.now.slice(0, -1);\n      return {\n        last: state.last,\n        now: newString,\n        lastSymbol: false,\n        isWritten: false\n      };\n\n    case 'DELETE_ALL':\n      newString = '';\n      return {\n        last: state.last,\n        now: newString,\n        lastSymbol: true,\n        isWritten: false\n      };\n\n    case 'TOTAL':\n      lastString = newString;\n      newString = getMathHandler(newString);\n      return {\n        last: lastString,\n        now: newString,\n        lastSymbol: false,\n        isWritten: true\n      };\n\n    case 'SQRT':\n      newString = state.now + '√';\n      return {\n        last: lastString,\n        now: newString,\n        lastSymbol: false,\n        isWritten: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/taiga/Рабочий стол/govno/firstredax/src/reducers.js"],"names":["getMathHandler","defaultState","last","now","lastSymbol","isWritten","reducer","state","action","newString","lastString","type","lenght","payload","slice"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,uBAA3B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,GAAG,EAAE,EAFY;AAGjBC,EAAAA,UAAU,EAAE,IAHK;AAIjBC,EAAAA,SAAS,EAAE;AAJM,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,MAAIC,SAAS,GAAGF,KAAK,CAACJ,GAAtB;AACA,MAAIO,UAAU,GAAGH,KAAK,CAACL,IAAvB;;AACA,UAAQM,MAAM,CAACG,IAAf;AACI,SAAK,YAAL;AACI,UAAIF,SAAS,CAACG,MAAV,KAAqB,CAArB,IAA0BL,KAAK,CAACH,UAApC,EAAgD;AAC5CK,QAAAA,SAAS,GAAGF,KAAK,CAACJ,GAAlB;AACH,OAFD,MAEO;AACHM,QAAAA,SAAS,GAAGF,KAAK,CAACJ,GAAN,GAAY,GAAZ,GAAkBK,MAAM,CAACK,OAAzB,GAAmC,GAA/C;AACH;;AACD,aAAO;AACHX,QAAAA,IAAI,EAAEK,KAAK,CAACL,IADT;AAEHC,QAAAA,GAAG,EAAEM,SAFF;AAGHL,QAAAA,UAAU,EAAE,IAHT;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAK,YAAL;AACI,UAAIE,KAAK,CAACF,SAAV,EAAqB;AACjBI,QAAAA,SAAS,GAAGD,MAAM,CAACK,OAAnB;AACH,OAFD,MAEO;AACHJ,QAAAA,SAAS,GAAGF,KAAK,CAACJ,GAAN,GAAYK,MAAM,CAACK,OAA/B;AACH;;AACD,aAAO;AACHX,QAAAA,IAAI,EAAEK,KAAK,CAACL,IADT;AAEHC,QAAAA,GAAG,EAAEM,SAFF;AAGHL,QAAAA,UAAU,EAAE,KAHT;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAK,YAAL;AACII,MAAAA,SAAS,GAAGF,KAAK,CAACJ,GAAN,CAAUW,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ;AACA,aAAO;AACHZ,QAAAA,IAAI,EAAEK,KAAK,CAACL,IADT;AAEHC,QAAAA,GAAG,EAAEM,SAFF;AAGHL,QAAAA,UAAU,EAAE,KAHT;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAK,YAAL;AACII,MAAAA,SAAS,GAAG,EAAZ;AACA,aAAO;AACHP,QAAAA,IAAI,EAAEK,KAAK,CAACL,IADT;AAEHC,QAAAA,GAAG,EAAEM,SAFF;AAGHL,QAAAA,UAAU,EAAE,IAHT;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAK,OAAL;AACIK,MAAAA,UAAU,GAAGD,SAAb;AACAA,MAAAA,SAAS,GAAGT,cAAc,CAACS,SAAD,CAA1B;AACA,aAAO;AACHP,QAAAA,IAAI,EAAEQ,UADH;AAEHP,QAAAA,GAAG,EAAEM,SAFF;AAGHL,QAAAA,UAAU,EAAE,KAHT;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAK,MAAL;AACII,MAAAA,SAAS,GAAGF,KAAK,CAACJ,GAAN,GAAY,GAAxB;AACA,aAAO;AACHD,QAAAA,IAAI,EAAEQ,UADH;AAEHP,QAAAA,GAAG,EAAEM,SAFF;AAGHL,QAAAA,UAAU,EAAE,KAHT;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ;AACI,aAAOE,KAAP;AA3DR;AA6DH,CAhED;;AAkEA,eAAeD,OAAf","sourcesContent":["import getMathHandler from './assets/applyMath.js'\nconst defaultState = {\n    last: '',\n    now: '',\n    lastSymbol: true,\n    isWritten: false\n}\n\nconst reducer = (state = defaultState, action) => {\n    let newString = state.now;\n    let lastString = state.last;\n    switch (action.type) {\n        case 'NEW_ACTION':\n            if (newString.lenght === 0 || state.lastSymbol) {\n                newString = state.now;\n            } else {\n                newString = state.now + ' ' + action.payload + ' ';\n            }\n            return {\n                last: state.last,\n                now: newString,\n                lastSymbol: true,\n                isWritten: false\n            };\n        case 'NEW_NUMBER':\n            if (state.isWritten) {\n                newString = action.payload;\n            } else {\n                newString = state.now + action.payload;\n            }\n            return {\n                last: state.last,\n                now: newString,\n                lastSymbol: false,\n                isWritten: false\n            }\n        case 'DELETE_ONE':\n            newString = state.now.slice(0, -1)\n            return {\n                last: state.last,\n                now: newString,\n                lastSymbol: false,\n                isWritten: false\n            }\n        case 'DELETE_ALL':\n            newString = '';\n            return {\n                last: state.last,\n                now: newString,\n                lastSymbol: true,\n                isWritten: false\n            }\n        case 'TOTAL':\n            lastString = newString;\n            newString = getMathHandler(newString);\n            return {\n                last: lastString,\n                now: newString,\n                lastSymbol: false,\n                isWritten: true\n            }\n        case 'SQRT':\n            newString = state.now + '√';\n            return {\n                last: lastString,\n                now: newString,\n                lastSymbol: false,\n                isWritten: false\n            }\n        default:\n            return state;\n    } \n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}